{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview \u00b6 Synopsis \u00b6 This is a compilation of notes and thoughts over time and creativity. What would capture the interest of people where I could write my stories and they would be, not only welcomed, but sought after. Authors I follow \u00b6 Here's some authors I follow: William D. Arand 1 William D Arand is a GameLit author best known for his unique stories. The talented author holds a day job that takes care of his bills and only writes in his free time. However, he has managed to create an impressive readership, and currently, he has over 20 published works to his name. Daniel Schinhofen 2 The American writer Daniel Schinhofen is an extremely well regarded author within his particular field, largely concerning himself with gaming in fiction. This is where literature role-playing games, or LITRPG as it\u2019s more commonly known, comes in, making for an interactive reading experience for his audience. Michael Anderle 3 Michael Anderle is a noteworthy author hailing from America, who is famous for writing science fiction, paranormal, and fantasy books. He is particularly well known for writing and publishing the Kurtherian Gambit book series. Author Anderle was born in the year 1967 in Houston, Texas. Jim Butcher 4 Well known fantasy author Jim Butcher is highly regarded thanks to his popular series of novels \u2018The Dresden Files\u2019 as well as the \u2018Codex Alera\u2019 saga. All this has helped secure him a place as a New York Times best-selling author. What type of Protagonist & Situation \u00b6 Pure Magical This character has gained some degree of magical ability or knowledge, outside of the norm for current reality. Pseudo-Magical (via Technology) A technology-based ability that's appears so advanced that an outsider would mistakenly conclude it could be magically based. ie. Teletechnics are an example of this. 5 Pure Technology An ability that showcased by some type of technology attached or assigned to the user, such as some type of futuristic armor or weapon. Time Period \u00b6 Is this based on current time period now ( ie. year 2021 ) Is this based on some ancient time period ( ie. pre-renaissance and musket, 14 th Century ) Is there some other type of Steampunk-variable time period, or some type of blend? What is the Conflict / Resolution that needs to be handled? \u00b6 No conflict or resolution required. You are just lost in the sauce. Prophetic based structure - somehow you are the chosen one to fulfill the prophecy and end the bad guys. Escaping something else and decide to take a stand here and now. Thoughts on Stupid People Genius has limits, Stupidity does not Inspiring Images \u00b6 Flow of what happens... \u00b6 graph TD A[Intro to Hero] -->|something happens...| B(Hero now has abilities and things have changed...) B --> C[Introduction to the problem] C -->|One| D[Good guy] C -->|Two| E[Bad guy] D --> F(Resolution) E --> F(Resolution) Footnotes \u00b6 Amazon Kindle Page: https://www.amazon.com/William-D.-Arand/e/B01AY7PSG4?ref=dbs_a_def_rwt_sims_vu00_r0_c0 \u21a9 Amazon Kindle Page: https://www.amazon.com/Daniel-Schinhofen/e/B01LXQWPZA?ref=dbs_a_def_rwt_sims_vu00_r0_c1 \u21a9 Amazon Kindle Page: https://www.amazon.com/Michael-Anderle/e/B017J2WANQ?ref=sr_ntt_srch_lnk_2&qid=1614555568&sr=1-2 \u21a9 Amazon Kindle Page: https://www.amazon.com/Jim-Butcher/e/B001H6U718?ref=sr_ntt_srch_lnk_1&qid=1614549936&sr=1-1 \u21a9 https://powerlisting.fandom.com/wiki/Teletechnics \u21a9","title":"Overview"},{"location":"#overview","text":"","title":"Overview"},{"location":"#synopsis","text":"This is a compilation of notes and thoughts over time and creativity. What would capture the interest of people where I could write my stories and they would be, not only welcomed, but sought after.","title":"Synopsis"},{"location":"#authors-i-follow","text":"Here's some authors I follow: William D. Arand 1 William D Arand is a GameLit author best known for his unique stories. The talented author holds a day job that takes care of his bills and only writes in his free time. However, he has managed to create an impressive readership, and currently, he has over 20 published works to his name. Daniel Schinhofen 2 The American writer Daniel Schinhofen is an extremely well regarded author within his particular field, largely concerning himself with gaming in fiction. This is where literature role-playing games, or LITRPG as it\u2019s more commonly known, comes in, making for an interactive reading experience for his audience. Michael Anderle 3 Michael Anderle is a noteworthy author hailing from America, who is famous for writing science fiction, paranormal, and fantasy books. He is particularly well known for writing and publishing the Kurtherian Gambit book series. Author Anderle was born in the year 1967 in Houston, Texas. Jim Butcher 4 Well known fantasy author Jim Butcher is highly regarded thanks to his popular series of novels \u2018The Dresden Files\u2019 as well as the \u2018Codex Alera\u2019 saga. All this has helped secure him a place as a New York Times best-selling author.","title":"Authors I follow"},{"location":"#what-type-of-protagonist-situation","text":"Pure Magical This character has gained some degree of magical ability or knowledge, outside of the norm for current reality. Pseudo-Magical (via Technology) A technology-based ability that's appears so advanced that an outsider would mistakenly conclude it could be magically based. ie. Teletechnics are an example of this. 5 Pure Technology An ability that showcased by some type of technology attached or assigned to the user, such as some type of futuristic armor or weapon.","title":"What type of Protagonist &amp; Situation"},{"location":"#time-period","text":"Is this based on current time period now ( ie. year 2021 ) Is this based on some ancient time period ( ie. pre-renaissance and musket, 14 th Century ) Is there some other type of Steampunk-variable time period, or some type of blend?","title":"Time Period"},{"location":"#what-is-the-conflict-resolution-that-needs-to-be-handled","text":"No conflict or resolution required. You are just lost in the sauce. Prophetic based structure - somehow you are the chosen one to fulfill the prophecy and end the bad guys. Escaping something else and decide to take a stand here and now. Thoughts on Stupid People Genius has limits, Stupidity does not","title":"What is the Conflict / Resolution that needs to be handled?"},{"location":"#inspiring-images","text":"","title":"Inspiring Images"},{"location":"#flow-of-what-happens","text":"graph TD A[Intro to Hero] -->|something happens...| B(Hero now has abilities and things have changed...) B --> C[Introduction to the problem] C -->|One| D[Good guy] C -->|Two| E[Bad guy] D --> F(Resolution) E --> F(Resolution)","title":"Flow of what happens..."},{"location":"#footnotes","text":"Amazon Kindle Page: https://www.amazon.com/William-D.-Arand/e/B01AY7PSG4?ref=dbs_a_def_rwt_sims_vu00_r0_c0 \u21a9 Amazon Kindle Page: https://www.amazon.com/Daniel-Schinhofen/e/B01LXQWPZA?ref=dbs_a_def_rwt_sims_vu00_r0_c1 \u21a9 Amazon Kindle Page: https://www.amazon.com/Michael-Anderle/e/B017J2WANQ?ref=sr_ntt_srch_lnk_2&qid=1614555568&sr=1-2 \u21a9 Amazon Kindle Page: https://www.amazon.com/Jim-Butcher/e/B001H6U718?ref=sr_ntt_srch_lnk_1&qid=1614549936&sr=1-1 \u21a9 https://powerlisting.fandom.com/wiki/Teletechnics \u21a9","title":"Footnotes"},{"location":"Skills/","text":"Skills and/or Knowledge utilized \u00b6 Psionics \u00b6 What are Psionics? 1 Psionic is a word invented in the 20 th century as an umbrella term to describe human paranormal behavior. It refers to all powers of the mind\u2014from the passive (telepathy or clairvoyance) to the active (telekinesis or pyrokinesis). Psionics is the study of all these powers 2 . Psychic Element Manipulation \u00b6 The power to manipulate elements of pure psychic energy. Combination of Psychic Energy Manipulation and Elemental Manipulation. Invoked by 'focusing' on the element type and the effect that needs to be accomplished. Not instantaneous. Teletechnics 3 can be used for instantaneous effects Element Types Air Smoke Earth Crystal Metal Fire Water Ice Light Darkness (Shadow) Psychic Energy Manipulation \u00b6 The ability to manipulate psychic energy. Variation of Energy Manipulation. Energy Types Healing Shield Energy Drain Psychic Life Runic (or Symbol) Based (ie. Runecaster) \u00b6 Runes for Knowledge \u00b6 The transference and gaining of knowledge regarding a specific-field or subject. Runes for Effects \u00b6 The manifestation of a specific field of effect (ie. fireball or wall of ice) as defined by the rune details. Craft Specific \u00b6 Alchemy \u00b6 Blacksmithing / Armorsmithing & Weaponsmithing / etc. \u00b6 Footnotes \u00b6 https://en.wikipedia.org/wiki/Psionics \u21a9 https://powerlisting.fandom.com/wiki/Psionics \u21a9 https://powerlisting.fandom.com/wiki/Teletechnics \u21a9","title":"Skills and/or Knowledge utilized"},{"location":"Skills/#skills-andor-knowledge-utilized","text":"","title":"Skills and/or Knowledge utilized"},{"location":"Skills/#psionics","text":"What are Psionics? 1 Psionic is a word invented in the 20 th century as an umbrella term to describe human paranormal behavior. It refers to all powers of the mind\u2014from the passive (telepathy or clairvoyance) to the active (telekinesis or pyrokinesis). Psionics is the study of all these powers 2 .","title":"Psionics"},{"location":"Skills/#psychic-element-manipulation","text":"The power to manipulate elements of pure psychic energy. Combination of Psychic Energy Manipulation and Elemental Manipulation. Invoked by 'focusing' on the element type and the effect that needs to be accomplished. Not instantaneous. Teletechnics 3 can be used for instantaneous effects Element Types Air Smoke Earth Crystal Metal Fire Water Ice Light Darkness (Shadow)","title":"Psychic Element Manipulation"},{"location":"Skills/#psychic-energy-manipulation","text":"The ability to manipulate psychic energy. Variation of Energy Manipulation. Energy Types Healing Shield Energy Drain Psychic Life","title":"Psychic Energy Manipulation"},{"location":"Skills/#runic-or-symbol-based-ie-runecaster","text":"","title":"Runic (or Symbol) Based (ie. Runecaster)"},{"location":"Skills/#runes-for-knowledge","text":"The transference and gaining of knowledge regarding a specific-field or subject.","title":"Runes for Knowledge"},{"location":"Skills/#runes-for-effects","text":"The manifestation of a specific field of effect (ie. fireball or wall of ice) as defined by the rune details.","title":"Runes for Effects"},{"location":"Skills/#craft-specific","text":"","title":"Craft Specific"},{"location":"Skills/#alchemy","text":"","title":"Alchemy"},{"location":"Skills/#blacksmithing-armorsmithing-weaponsmithing-etc","text":"","title":"Blacksmithing / Armorsmithing &amp; Weaponsmithing / etc."},{"location":"Skills/#footnotes","text":"https://en.wikipedia.org/wiki/Psionics \u21a9 https://powerlisting.fandom.com/wiki/Psionics \u21a9 https://powerlisting.fandom.com/wiki/Teletechnics \u21a9","title":"Footnotes"},{"location":"info/","text":"Info \u00b6 2021-03-05 09:52:30.525474 Macros Plugin Environment \u00b6 General List \u00b6 All available variables and filters within the macros plugin: Variable Type Content extra dict social = [{'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/gdistortions'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://www.instagram.com/tjohare/'}] config Config config_file_path = 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\mkdocs.yml', site_name = 'Book Ideas', nav [ NoneType ], pages [ NoneType ], site_url = 'https://tjohare.github.io/book_ideas', site_description = 'My Thoughts and Things all Book Idea related', site_author = \"TJ O'Hare\", theme [ Theme ], docs_dir = 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\docs', site_dir = 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\site', copyright = 'Copyright \u00a9 2021 TJ OHare', google_analytics [ NoneType ], dev_addr [ Address ], use_directory_urls = True, repo_url = '', repo_name = '', edit_uri = '', extra_css = ['stylesheets/extra.css'], extra_javascript = ['https://unpkg.com/mermaid/dist/mermaid.min.js', 'javascripts/config.js', 'https://polyfill.io/v3/polyfill.min.js?features=es6', 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'], extra_templates = [], markdown_extensions = ['toc', 'tables', 'fenced_code', 'def_list', 'attr_list', 'admonition', 'codehilite', 'footnotes', 'pymdownx.arithmatex', 'pymdownx.betterem', 'pymdownx.caret', 'pymdownx.critic', 'pymdownx.details', 'pymdownx.emoji', 'pymdownx.inlinehilite', 'pymdownx.magiclink', 'pymdownx.mark', 'pymdownx.smartsymbols', 'pymdownx.snippets', 'pymdownx.highlight', 'pymdownx.superfences', 'pymdownx.tasklist', 'pymdownx.tilde'], mdx_configs [ dict ], strict = False, remote_branch = 'gh-pages', remote_name = 'origin', extra [ SubConfig ], plugins [ PluginCollection ] environment dict system = 'Windows', system_version = '10', python_version = '3.9.2', mkdocs_version = '1.1.2', macros_plugin_version = '0.5.5', jinja2_version = '2.11.3' plugin Config module_name = 'main', modules = [], include_dir = '', include_yaml = [], j2_block_start_string = '', j2_block_end_string = '', j2_variable_start_string = '', j2_variable_end_string = '', verbose = False git dict status = False, date [ NoneType ], short_commit = \"# Unexpected error '['git', 'rev-parse', '--short', 'HEAD']': [WinError 2] The system cannot find the file specified\", commit = \"# Unexpected error '['git', 'rev-parse', 'HEAD']': [WinError 2] The system cannot find the file specified\", author = \"# Unexpected error '['git', 'log', '-1', '--pretty=format:%an']': [WinError 2] The system cannot find the file specified\", tag = \"# Unexpected error '['git', 'describe', '--tags']': [WinError 2] The system cannot find the file specified\", date_ISO = \"# Unexpected error '['git', '--no-pager', 'log', '-1', '--format=%ai']': [WinError 2] The system cannot find the file specified\", message = \"# Unexpected error '['git', 'log', '-1', '--pretty=%B']': [WinError 2] The system cannot find the file specified\", raw = \"# Unexpected error '['git', 'log', '-1']': [WinError 2] The system cannot find the file specified\", root_dir = \"# Unexpected error '['git', 'rev-parse', '--show-toplevel']': [WinError 2] The system cannot find the file specified\" context function ( obj, e ) Default mkdocs_macro List the defined variables macros_info function ( ) Test/debug function: list useful documentation on the mkdocs_macro environment. now function ( ) Get the current time (returns a datetime object). Used alone, it provides a timestamp. To get the year use now().year , for the month number now().month , etc. fix_url function ( url, r ) If url is relative, fix it so that it points to the docs diretory. This is necessary because relative links in markdown must be adapted in html ('img/foo.png' => '../img/img.png'). social list [{'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/gdistortions'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://www.instagram.com/tjohare/'}] filters dict pretty [ function ] filters_builtin dict abs [ builtin_function_or_method ], attr [ function ], batch [ function ], capitalize [ function ], center [ function ], count [ builtin_function_or_method ], d [ function ], default [ function ], dictsort [ function ], e [ builtin_function_or_method ], escape [ builtin_function_or_method ], filesizeformat [ function ], first [ function ], float [ function ], forceescape [ function ], format [ function ], groupby [ function ], indent [ function ], int [ function ], join [ function ], last [ function ], length [ builtin_function_or_method ], list [ function ], lower [ function ], map [ function ], min [ function ], max [ function ], pprint [ function ], random [ function ], reject [ function ], rejectattr [ function ], replace [ function ], reverse [ function ], round [ function ], safe [ function ], select [ function ], selectattr [ function ], slice [ function ], sort [ function ], string [ builtin_function_or_method ], striptags [ function ], sum [ function ], title [ function ], trim [ function ], truncate [ function ], unique [ function ], upper [ function ], urlencode [ function ], urlize [ function ], wordcount [ function ], wordwrap [ function ], xmlattr [ function ], tojson [ function ] navigation Navigation Page(title='Overview', url='/book_ideas/') Page(title='Skills and/or Knowledge utilized', url='/book_ideas/Skills/') Page(title='Info', url='/book_ideas/info/') Page(title=[blank], url='/book_ideas/storylines/') Section(title='Books') Page(title=[blank], url='/book_ideas/books/daimon/') page Page Page(title='Info', url='/book_ideas/info/') Config Information \u00b6 Standard MkDocs configuration information. Do not try to modify. e.g. {{ config.docs_dir }} See also the MkDocs documentation on the config object . Variable Type Content config_file_path str 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\mkdocs.yml' site_name str 'Book Ideas' nav NoneType None pages NoneType None site_url str 'https://tjohare.github.io/book_ideas' site_description str 'My Thoughts and Things all Book Idea related' site_author str \"TJ O'Hare\" theme Theme Theme(name='material', dirs=['c:\\\\python39\\\\lib\\\\site-packages\\\\material', 'c:\\\\python39\\\\lib\\\\site-packages\\\\mkdocs\\\\templates'], static_templates=['404.html', 'sitemap.xml'], language='en', direction=None, features=[], palette={'primary': 'deep purple', 'accent': 'deep purple'}, font={'text': 'Roboto', 'code': 'Roboto'}, icon=None, favicon='assets/images/favicon.png', include_search_page=False, search_index_only=True, feature={'tabs': True}) docs_dir str 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\docs' site_dir str 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\site' copyright str 'Copyright \u00a9 2021 TJ OHare' google_analytics NoneType None dev_addr Address Address(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str '' repo_name str '' edit_uri str '' extra_css list ['stylesheets/extra.css'] extra_javascript list ['https://unpkg.com/mermaid/dist/mermaid.min.js', 'javascripts/config.js', 'https://polyfill.io/v3/polyfill.min.js?features=es6', 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'def_list', 'attr_list', 'admonition', 'codehilite', 'footnotes', 'pymdownx.arithmatex', 'pymdownx.betterem', 'pymdownx.caret', 'pymdownx.critic', 'pymdownx.details', 'pymdownx.emoji', 'pymdownx.inlinehilite', 'pymdownx.magiclink', 'pymdownx.mark', 'pymdownx.smartsymbols', 'pymdownx.snippets', 'pymdownx.highlight', 'pymdownx.superfences', 'pymdownx.tasklist', 'pymdownx.tilde'] mdx_configs dict toc [ dict ], pymdownx.arithmatex [ dict ], pymdownx.betterem [ dict ], pymdownx.emoji [ dict ], pymdownx.superfences [ dict ], pymdownx.tasklist [ dict ] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra SubConfig {'social': [{'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/gdistortions'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://www.instagram.com/tjohare/'}]} plugins PluginCollection search [ SearchPlugin ], mermaid2 [ MarkdownMermaidPlugin ], macros [ MacrosPlugin ] Git Information \u00b6 Information available on the last commit and the git repository containing the documentation project: e.g. {{ git.message }} Variable Type Content status bool False date NoneType None short_commit str \"# Unexpected error '['git', 'rev-parse', '--short', 'HEAD']': [WinError 2] The system cannot find the file specified\" commit str \"# Unexpected error '['git', 'rev-parse', 'HEAD']': [WinError 2] The system cannot find the file specified\" author str \"# Unexpected error '['git', 'log', '-1', '--pretty=format:%an']': [WinError 2] The system cannot find the file specified\" tag str \"# Unexpected error '['git', 'describe', '--tags']': [WinError 2] The system cannot find the file specified\" date_ISO str \"# Unexpected error '['git', '--no-pager', 'log', '-1', '--format=%ai']': [WinError 2] The system cannot find the file specified\" message str \"# Unexpected error '['git', 'log', '-1', '--pretty=%B']': [WinError 2] The system cannot find the file specified\" raw str \"# Unexpected error '['git', 'log', '-1']': [WinError 2] The system cannot find the file specified\" root_dir str \"# Unexpected error '['git', 'rev-parse', '--show-toplevel']': [WinError 2] The system cannot find the file specified\" Page Attributes \u00b6 Provided by MkDocs. These attributes change for every page (the attributes shown are for this page). e.g. {{ page.title }} See also the MkDocs documentation on the page object . Variable Type Content file File page [ Page ], src_path = 'info.md', abs_src_path = 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\docs\\\\info.md', name = 'info', dest_path = 'info\\\\index.html', abs_dest_path = 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\site\\\\info\\\\index.html', url = 'info/' title str 'Info' parent NoneType None children NoneType None previous_page Page Page(title='Skills and/or Knowledge utilized', url='/book_ideas/Skills/') next_page Page Page(title=[blank], url='/book_ideas/storylines/') _Page__active bool False is_section bool False is_page bool True is_link bool False update_date str '2021-03-05' canonical_url str 'https://tjohare.github.io/book_ideas/info/' abs_url str '/book_ideas/info/' edit_url NoneType None markdown str '# Info\\n\\n{{ now() }}\\n\\n{{ macros_info() }}\\n' content NoneType None toc list [] meta dict To have all titles of all pages, use: {% for page in navigation.pages %} - {{ page.title }} {% endfor% } Plugin Filters \u00b6 These filters are provided as a standard by the macros plugin. Variable Type Content pretty function ( var_list, rows, header, e ) Default mkdocs_macro Prettify a dictionary or object (used for environment documentation, or debugging). Builtin Jinja2 Filters \u00b6 These filters are provided by Jinja2 as a standard. See also the Jinja2 documentation on builtin filters ). Variable Type Content abs builtin_function_or_method Return the absolute value of the argument. attr function ( environment, obj, name, value ) Get an attribute of an object. foo|attr(\"bar\") works like foo.bar just that always an attribute is returned and items are not looked up. batch function ( value, linecount, fill_with, tmp, item ) A filter that batches items. It works pretty much like slice just the other way round. It returns a list of lists with the given number of items. If you provide a second parameter this is used to fill up missing items. See this example. capitalize function ( s ) Capitalize a value. The first character will be uppercase, all others lowercase. center function ( value, width ) Centers the value in a field of a given width. count builtin_function_or_method Return the number of items in a container. d function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. default function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. dictsort function ( value, case_sensitive, by, reverse, sort_func ) Sort a dict and yield (key, value) pairs. Because python dicts are unsorted you may want to use this function to order them by either key or value. e builtin_function_or_method escape(s) -> markup escape builtin_function_or_method escape(s) -> markup filesizeformat function ( value, binary, bytes, base, prefixes, i, prefix, unit ) Format the value like a 'human-readable' file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc). Per default decimal prefixes are used (Mega, Giga, etc.), if the second parameter is set to True the binary prefixes are used (Mebi, Gibi). first function ( environment, seq ) Return the first item of a sequence. float function ( value, default ) Convert the value into a floating point number. If the conversion doesn't work it will return 0.0 . You can override this default using the first parameter. forceescape function ( value ) Enforce HTML escaping. This will probably double escape variables. format function ( value, args, kwargs ) Apply the given values to a printf-style _ format string, like string % values . groupby function ( environment, value, attribute, expr ) Group a sequence of objects by an attribute using Python's :func: itertools.groupby . The attribute can use dot notation for nested access, like \"address.city\" . Unlike Python's groupby , the values are sorted first so only one group is returned for each unique value. indent function ( s, width, first, blank, indentfirst, newline, rv, lines ) Return a copy of the string with each line indented by 4 spaces. The first line and blank lines are not indented by default. int function ( value, default, base ) Convert the value into an integer. If the conversion doesn't work it will return 0 . You can override this default using the first parameter. You can also override the default base (10) in the second parameter, which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively. The base is ignored for decimal numbers and non-string values. join function ( eval_ctx, value, d, attribute, do_escape, idx, item ) Return a string which is the concatenation of the strings in the sequence. The separator between elements is an empty string per default, you can define it with the optional parameter. last function ( environment, seq ) Return the last item of a sequence. length builtin_function_or_method Return the number of items in a container. list function ( value ) Convert the value into a list. If it was a string the returned list will be a list of characters. lower function ( s ) Convert a value to lowercase. map function ( args, kwargs, seq, func, item ) Applies a filter on a sequence of objects or looks up an attribute. This is useful when dealing with lists of objects but you are really only interested in a certain value of it. min function ( environment, value, case_sensitive, attribute ) Return the smallest item from the sequence. max function ( environment, value, case_sensitive, attribute ) Return the largest item from the sequence. pprint function ( value, verbose ) Pretty print a variable. Useful for debugging. random function ( context, seq ) Return a random item from the sequence. reject function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and rejecting the objects with the test succeeding. rejectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and rejecting the objects with the test succeeding. replace function ( eval_ctx, s, old, new, count ) Return a copy of the value with all occurrences of a substring replaced with a new one. The first argument is the substring that should be replaced, the second is the replacement string. If the optional third argument count is given, only the first count occurrences are replaced. reverse function ( value, rv ) Reverse the object or return an iterator that iterates over it the other way round. round function ( value, precision, method, func ) Round the number to a given precision. The first parameter specifies the precision (default is 0 ), the second the rounding method. safe function ( value ) Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped. select function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and only selecting the objects with the test succeeding. selectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and only selecting the objects with the test succeeding. slice function ( value, slices, fill_with, seq, length, items_per_slice, slices_with_extra, offset, slice_number, start, end, tmp ) Slice an iterator and return a list of lists containing those items. Useful if you want to create a div containing three ul tags that represent columns. sort function ( environment, value, reverse, case_sensitive, attribute, key_func ) Sort an iterable using Python's :func: sorted . string builtin_function_or_method soft_unicode(object) -> string striptags function ( value ) Strip SGML/XML tags and replace adjacent whitespace by one space. sum function ( environment, iterable, attribute, start ) Returns the sum of a sequence of numbers plus the value of parameter 'start' (which defaults to 0). When the sequence is empty it returns start. title function ( s ) Return a titlecased version of the value. I.e. words will start with uppercase letters, all remaining characters are lowercase. trim function ( value, chars ) Strip leading and trailing characters, by default whitespace. truncate function ( env, s, length, killwords, end, leeway, result ) Return a truncated copy of the string. The length is specified with the first parameter which defaults to 255 . If the second parameter is true the filter will cut the text at length. Otherwise it will discard the last word. If the text was in fact truncated it will append an ellipsis sign ( \"...\" ). If you want a different ellipsis sign than \"...\" you can specify it using the third parameter. Strings that only exceed the length by the tolerance margin given in the fourth parameter will not be truncated. unique function ( environment, value, case_sensitive, attribute, getter, seen, item, key ) Returns a list of unique items from the given iterable. upper function ( s ) Convert a value to uppercase. urlencode function ( value, items ) Quote data for use in a URL path or query using UTF-8. urlize function ( eval_ctx, value, trim_url_limit, nofollow, target, rel, policies, rv ) Converts URLs in plain text into clickable links. wordcount function ( s ) Count the words in that string. wordwrap function ( environment, s, width, break_long_words, wrapstring, break_on_hyphens ) Wrap a string to the given width. Existing newlines are treated as paragraphs to be wrapped separately. xmlattr function ( _eval_ctx, d, autospace, rv ) Create an SGML/XML attribute string based on the items in a dict. All values that are neither none nor undefined are automatically escaped. tojson function ( eval_ctx, value, indent, policies, dumper, options ) Dumps a structure to JSON so that it's safe to use in <script> tags. It accepts the same arguments and returns a JSON string. Note that this is available in templates through the |tojson filter which will also mark the result as safe. Due to how this function escapes certain characters this is safe even if used outside of <script> tags.","title":"Info"},{"location":"info/#info","text":"2021-03-05 09:52:30.525474","title":"Info"},{"location":"info/#macros-plugin-environment","text":"","title":"Macros Plugin Environment"},{"location":"info/#general-list","text":"All available variables and filters within the macros plugin: Variable Type Content extra dict social = [{'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/gdistortions'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://www.instagram.com/tjohare/'}] config Config config_file_path = 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\mkdocs.yml', site_name = 'Book Ideas', nav [ NoneType ], pages [ NoneType ], site_url = 'https://tjohare.github.io/book_ideas', site_description = 'My Thoughts and Things all Book Idea related', site_author = \"TJ O'Hare\", theme [ Theme ], docs_dir = 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\docs', site_dir = 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\site', copyright = 'Copyright \u00a9 2021 TJ OHare', google_analytics [ NoneType ], dev_addr [ Address ], use_directory_urls = True, repo_url = '', repo_name = '', edit_uri = '', extra_css = ['stylesheets/extra.css'], extra_javascript = ['https://unpkg.com/mermaid/dist/mermaid.min.js', 'javascripts/config.js', 'https://polyfill.io/v3/polyfill.min.js?features=es6', 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'], extra_templates = [], markdown_extensions = ['toc', 'tables', 'fenced_code', 'def_list', 'attr_list', 'admonition', 'codehilite', 'footnotes', 'pymdownx.arithmatex', 'pymdownx.betterem', 'pymdownx.caret', 'pymdownx.critic', 'pymdownx.details', 'pymdownx.emoji', 'pymdownx.inlinehilite', 'pymdownx.magiclink', 'pymdownx.mark', 'pymdownx.smartsymbols', 'pymdownx.snippets', 'pymdownx.highlight', 'pymdownx.superfences', 'pymdownx.tasklist', 'pymdownx.tilde'], mdx_configs [ dict ], strict = False, remote_branch = 'gh-pages', remote_name = 'origin', extra [ SubConfig ], plugins [ PluginCollection ] environment dict system = 'Windows', system_version = '10', python_version = '3.9.2', mkdocs_version = '1.1.2', macros_plugin_version = '0.5.5', jinja2_version = '2.11.3' plugin Config module_name = 'main', modules = [], include_dir = '', include_yaml = [], j2_block_start_string = '', j2_block_end_string = '', j2_variable_start_string = '', j2_variable_end_string = '', verbose = False git dict status = False, date [ NoneType ], short_commit = \"# Unexpected error '['git', 'rev-parse', '--short', 'HEAD']': [WinError 2] The system cannot find the file specified\", commit = \"# Unexpected error '['git', 'rev-parse', 'HEAD']': [WinError 2] The system cannot find the file specified\", author = \"# Unexpected error '['git', 'log', '-1', '--pretty=format:%an']': [WinError 2] The system cannot find the file specified\", tag = \"# Unexpected error '['git', 'describe', '--tags']': [WinError 2] The system cannot find the file specified\", date_ISO = \"# Unexpected error '['git', '--no-pager', 'log', '-1', '--format=%ai']': [WinError 2] The system cannot find the file specified\", message = \"# Unexpected error '['git', 'log', '-1', '--pretty=%B']': [WinError 2] The system cannot find the file specified\", raw = \"# Unexpected error '['git', 'log', '-1']': [WinError 2] The system cannot find the file specified\", root_dir = \"# Unexpected error '['git', 'rev-parse', '--show-toplevel']': [WinError 2] The system cannot find the file specified\" context function ( obj, e ) Default mkdocs_macro List the defined variables macros_info function ( ) Test/debug function: list useful documentation on the mkdocs_macro environment. now function ( ) Get the current time (returns a datetime object). Used alone, it provides a timestamp. To get the year use now().year , for the month number now().month , etc. fix_url function ( url, r ) If url is relative, fix it so that it points to the docs diretory. This is necessary because relative links in markdown must be adapted in html ('img/foo.png' => '../img/img.png'). social list [{'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/gdistortions'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://www.instagram.com/tjohare/'}] filters dict pretty [ function ] filters_builtin dict abs [ builtin_function_or_method ], attr [ function ], batch [ function ], capitalize [ function ], center [ function ], count [ builtin_function_or_method ], d [ function ], default [ function ], dictsort [ function ], e [ builtin_function_or_method ], escape [ builtin_function_or_method ], filesizeformat [ function ], first [ function ], float [ function ], forceescape [ function ], format [ function ], groupby [ function ], indent [ function ], int [ function ], join [ function ], last [ function ], length [ builtin_function_or_method ], list [ function ], lower [ function ], map [ function ], min [ function ], max [ function ], pprint [ function ], random [ function ], reject [ function ], rejectattr [ function ], replace [ function ], reverse [ function ], round [ function ], safe [ function ], select [ function ], selectattr [ function ], slice [ function ], sort [ function ], string [ builtin_function_or_method ], striptags [ function ], sum [ function ], title [ function ], trim [ function ], truncate [ function ], unique [ function ], upper [ function ], urlencode [ function ], urlize [ function ], wordcount [ function ], wordwrap [ function ], xmlattr [ function ], tojson [ function ] navigation Navigation Page(title='Overview', url='/book_ideas/') Page(title='Skills and/or Knowledge utilized', url='/book_ideas/Skills/') Page(title='Info', url='/book_ideas/info/') Page(title=[blank], url='/book_ideas/storylines/') Section(title='Books') Page(title=[blank], url='/book_ideas/books/daimon/') page Page Page(title='Info', url='/book_ideas/info/')","title":"General List"},{"location":"info/#config-information","text":"Standard MkDocs configuration information. Do not try to modify. e.g. {{ config.docs_dir }} See also the MkDocs documentation on the config object . Variable Type Content config_file_path str 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\mkdocs.yml' site_name str 'Book Ideas' nav NoneType None pages NoneType None site_url str 'https://tjohare.github.io/book_ideas' site_description str 'My Thoughts and Things all Book Idea related' site_author str \"TJ O'Hare\" theme Theme Theme(name='material', dirs=['c:\\\\python39\\\\lib\\\\site-packages\\\\material', 'c:\\\\python39\\\\lib\\\\site-packages\\\\mkdocs\\\\templates'], static_templates=['404.html', 'sitemap.xml'], language='en', direction=None, features=[], palette={'primary': 'deep purple', 'accent': 'deep purple'}, font={'text': 'Roboto', 'code': 'Roboto'}, icon=None, favicon='assets/images/favicon.png', include_search_page=False, search_index_only=True, feature={'tabs': True}) docs_dir str 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\docs' site_dir str 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\site' copyright str 'Copyright \u00a9 2021 TJ OHare' google_analytics NoneType None dev_addr Address Address(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str '' repo_name str '' edit_uri str '' extra_css list ['stylesheets/extra.css'] extra_javascript list ['https://unpkg.com/mermaid/dist/mermaid.min.js', 'javascripts/config.js', 'https://polyfill.io/v3/polyfill.min.js?features=es6', 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'def_list', 'attr_list', 'admonition', 'codehilite', 'footnotes', 'pymdownx.arithmatex', 'pymdownx.betterem', 'pymdownx.caret', 'pymdownx.critic', 'pymdownx.details', 'pymdownx.emoji', 'pymdownx.inlinehilite', 'pymdownx.magiclink', 'pymdownx.mark', 'pymdownx.smartsymbols', 'pymdownx.snippets', 'pymdownx.highlight', 'pymdownx.superfences', 'pymdownx.tasklist', 'pymdownx.tilde'] mdx_configs dict toc [ dict ], pymdownx.arithmatex [ dict ], pymdownx.betterem [ dict ], pymdownx.emoji [ dict ], pymdownx.superfences [ dict ], pymdownx.tasklist [ dict ] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra SubConfig {'social': [{'icon': 'fontawesome/brands/twitter', 'link': 'https://twitter.com/gdistortions'}, {'icon': 'fontawesome/brands/instagram', 'link': 'https://www.instagram.com/tjohare/'}]} plugins PluginCollection search [ SearchPlugin ], mermaid2 [ MarkdownMermaidPlugin ], macros [ MacrosPlugin ]","title":"Config Information"},{"location":"info/#git-information","text":"Information available on the last commit and the git repository containing the documentation project: e.g. {{ git.message }} Variable Type Content status bool False date NoneType None short_commit str \"# Unexpected error '['git', 'rev-parse', '--short', 'HEAD']': [WinError 2] The system cannot find the file specified\" commit str \"# Unexpected error '['git', 'rev-parse', 'HEAD']': [WinError 2] The system cannot find the file specified\" author str \"# Unexpected error '['git', 'log', '-1', '--pretty=format:%an']': [WinError 2] The system cannot find the file specified\" tag str \"# Unexpected error '['git', 'describe', '--tags']': [WinError 2] The system cannot find the file specified\" date_ISO str \"# Unexpected error '['git', '--no-pager', 'log', '-1', '--format=%ai']': [WinError 2] The system cannot find the file specified\" message str \"# Unexpected error '['git', 'log', '-1', '--pretty=%B']': [WinError 2] The system cannot find the file specified\" raw str \"# Unexpected error '['git', 'log', '-1']': [WinError 2] The system cannot find the file specified\" root_dir str \"# Unexpected error '['git', 'rev-parse', '--show-toplevel']': [WinError 2] The system cannot find the file specified\"","title":"Git Information"},{"location":"info/#page-attributes","text":"Provided by MkDocs. These attributes change for every page (the attributes shown are for this page). e.g. {{ page.title }} See also the MkDocs documentation on the page object . Variable Type Content file File page [ Page ], src_path = 'info.md', abs_src_path = 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\docs\\\\info.md', name = 'info', dest_path = 'info\\\\index.html', abs_dest_path = 'E:\\\\TJ Scans and files\\\\tjohare.github.io-master\\\\book_ideas\\\\site\\\\info\\\\index.html', url = 'info/' title str 'Info' parent NoneType None children NoneType None previous_page Page Page(title='Skills and/or Knowledge utilized', url='/book_ideas/Skills/') next_page Page Page(title=[blank], url='/book_ideas/storylines/') _Page__active bool False is_section bool False is_page bool True is_link bool False update_date str '2021-03-05' canonical_url str 'https://tjohare.github.io/book_ideas/info/' abs_url str '/book_ideas/info/' edit_url NoneType None markdown str '# Info\\n\\n{{ now() }}\\n\\n{{ macros_info() }}\\n' content NoneType None toc list [] meta dict To have all titles of all pages, use: {% for page in navigation.pages %} - {{ page.title }} {% endfor% }","title":"Page Attributes"},{"location":"info/#plugin-filters","text":"These filters are provided as a standard by the macros plugin. Variable Type Content pretty function ( var_list, rows, header, e ) Default mkdocs_macro Prettify a dictionary or object (used for environment documentation, or debugging).","title":"Plugin Filters"},{"location":"info/#builtin-jinja2-filters","text":"These filters are provided by Jinja2 as a standard. See also the Jinja2 documentation on builtin filters ). Variable Type Content abs builtin_function_or_method Return the absolute value of the argument. attr function ( environment, obj, name, value ) Get an attribute of an object. foo|attr(\"bar\") works like foo.bar just that always an attribute is returned and items are not looked up. batch function ( value, linecount, fill_with, tmp, item ) A filter that batches items. It works pretty much like slice just the other way round. It returns a list of lists with the given number of items. If you provide a second parameter this is used to fill up missing items. See this example. capitalize function ( s ) Capitalize a value. The first character will be uppercase, all others lowercase. center function ( value, width ) Centers the value in a field of a given width. count builtin_function_or_method Return the number of items in a container. d function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. default function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. dictsort function ( value, case_sensitive, by, reverse, sort_func ) Sort a dict and yield (key, value) pairs. Because python dicts are unsorted you may want to use this function to order them by either key or value. e builtin_function_or_method escape(s) -> markup escape builtin_function_or_method escape(s) -> markup filesizeformat function ( value, binary, bytes, base, prefixes, i, prefix, unit ) Format the value like a 'human-readable' file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc). Per default decimal prefixes are used (Mega, Giga, etc.), if the second parameter is set to True the binary prefixes are used (Mebi, Gibi). first function ( environment, seq ) Return the first item of a sequence. float function ( value, default ) Convert the value into a floating point number. If the conversion doesn't work it will return 0.0 . You can override this default using the first parameter. forceescape function ( value ) Enforce HTML escaping. This will probably double escape variables. format function ( value, args, kwargs ) Apply the given values to a printf-style _ format string, like string % values . groupby function ( environment, value, attribute, expr ) Group a sequence of objects by an attribute using Python's :func: itertools.groupby . The attribute can use dot notation for nested access, like \"address.city\" . Unlike Python's groupby , the values are sorted first so only one group is returned for each unique value. indent function ( s, width, first, blank, indentfirst, newline, rv, lines ) Return a copy of the string with each line indented by 4 spaces. The first line and blank lines are not indented by default. int function ( value, default, base ) Convert the value into an integer. If the conversion doesn't work it will return 0 . You can override this default using the first parameter. You can also override the default base (10) in the second parameter, which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively. The base is ignored for decimal numbers and non-string values. join function ( eval_ctx, value, d, attribute, do_escape, idx, item ) Return a string which is the concatenation of the strings in the sequence. The separator between elements is an empty string per default, you can define it with the optional parameter. last function ( environment, seq ) Return the last item of a sequence. length builtin_function_or_method Return the number of items in a container. list function ( value ) Convert the value into a list. If it was a string the returned list will be a list of characters. lower function ( s ) Convert a value to lowercase. map function ( args, kwargs, seq, func, item ) Applies a filter on a sequence of objects or looks up an attribute. This is useful when dealing with lists of objects but you are really only interested in a certain value of it. min function ( environment, value, case_sensitive, attribute ) Return the smallest item from the sequence. max function ( environment, value, case_sensitive, attribute ) Return the largest item from the sequence. pprint function ( value, verbose ) Pretty print a variable. Useful for debugging. random function ( context, seq ) Return a random item from the sequence. reject function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and rejecting the objects with the test succeeding. rejectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and rejecting the objects with the test succeeding. replace function ( eval_ctx, s, old, new, count ) Return a copy of the value with all occurrences of a substring replaced with a new one. The first argument is the substring that should be replaced, the second is the replacement string. If the optional third argument count is given, only the first count occurrences are replaced. reverse function ( value, rv ) Reverse the object or return an iterator that iterates over it the other way round. round function ( value, precision, method, func ) Round the number to a given precision. The first parameter specifies the precision (default is 0 ), the second the rounding method. safe function ( value ) Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped. select function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and only selecting the objects with the test succeeding. selectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and only selecting the objects with the test succeeding. slice function ( value, slices, fill_with, seq, length, items_per_slice, slices_with_extra, offset, slice_number, start, end, tmp ) Slice an iterator and return a list of lists containing those items. Useful if you want to create a div containing three ul tags that represent columns. sort function ( environment, value, reverse, case_sensitive, attribute, key_func ) Sort an iterable using Python's :func: sorted . string builtin_function_or_method soft_unicode(object) -> string striptags function ( value ) Strip SGML/XML tags and replace adjacent whitespace by one space. sum function ( environment, iterable, attribute, start ) Returns the sum of a sequence of numbers plus the value of parameter 'start' (which defaults to 0). When the sequence is empty it returns start. title function ( s ) Return a titlecased version of the value. I.e. words will start with uppercase letters, all remaining characters are lowercase. trim function ( value, chars ) Strip leading and trailing characters, by default whitespace. truncate function ( env, s, length, killwords, end, leeway, result ) Return a truncated copy of the string. The length is specified with the first parameter which defaults to 255 . If the second parameter is true the filter will cut the text at length. Otherwise it will discard the last word. If the text was in fact truncated it will append an ellipsis sign ( \"...\" ). If you want a different ellipsis sign than \"...\" you can specify it using the third parameter. Strings that only exceed the length by the tolerance margin given in the fourth parameter will not be truncated. unique function ( environment, value, case_sensitive, attribute, getter, seen, item, key ) Returns a list of unique items from the given iterable. upper function ( s ) Convert a value to uppercase. urlencode function ( value, items ) Quote data for use in a URL path or query using UTF-8. urlize function ( eval_ctx, value, trim_url_limit, nofollow, target, rel, policies, rv ) Converts URLs in plain text into clickable links. wordcount function ( s ) Count the words in that string. wordwrap function ( environment, s, width, break_long_words, wrapstring, break_on_hyphens ) Wrap a string to the given width. Existing newlines are treated as paragraphs to be wrapped separately. xmlattr function ( _eval_ctx, d, autospace, rv ) Create an SGML/XML attribute string based on the items in a dict. All values that are neither none nor undefined are automatically escaped. tojson function ( eval_ctx, value, indent, policies, dumper, options ) Dumps a structure to JSON so that it's safe to use in <script> tags. It accepts the same arguments and returns a JSON string. Note that this is available in templates through the |tojson filter which will also mark the result as safe. Due to how this function escapes certain characters this is safe even if used outside of <script> tags.","title":"Builtin Jinja2 Filters"},{"location":"storylines/","text":"Storylines \u00b6 StoryLine 1: \"Daimon\" \u00b6 Background The word \"Demon\" which we commonly know today, is derived from \"Daemon\". Daemon is the Latin word for the Ancient Greek of daimon (\u03b4\u03b1\u03af\u03bc\u03c9\u03bd: \"god\", \"godlike\", \"power\", \"fate\"), which originally referred to a lesser deity or guiding spirit such as the daemons of ancient Greek religion and mythology and of later Hellenistic religion and philosophy. The word is derived from Proto-Indo-European daimon \"provider, divider (of fortunes or destinies), \" from the root da- \"to divide\". Daimons were possibly seen as the souls of men of the golden age acting as tutelary deities, according to entry \u03b4\u03b1\u03af\u03bc\u03c9\u03bd at Liddell & Scott. Additionally, For reference, BCE is short for Before Common Era. The Common Era begins with year 1 in the Gregorian calendar and is also known as the Western or Christian calendar. The First Gods \u00b6 Generally the Oldest Deities are the Mesopotamian Gods. The seven sages in Sumerian mythology sent to the earth by Enki at the beginning of time to give human beings the sacred 'me' (laws) of civilization. They were also known, by the Akkadians and Babylonians, as The Apkallu or the Apkallu Fish and are depicted with the body of a fish and the head of a man or with the torso of a fish and human arms, legs and head, sometimes with and sometimes without wings. In the Babylonian tradition, the Apkallu also appear as Griffins or simply as humans with wings. There are shrines to Enki dating back to the founding of the city of Eridu, considered by the Mesopotamians the first city established at the beginning of the world c. 5400 BCE. What were they really? \u00b6 Travelers from alternate dimensions and planes. More importantly, they were usually opportunists and unscrupulous businessmen and merchants. Just vasty overpowered compared to the native life here on Earth. And the wars and conflicts have never stopped. Footnotes \u00b6 https://en.wikipedia.org/wiki/Daemon_(classical_mythology ) \u21a9 https://www.ancient.eu/Enki/ \u21a9","title":"Storylines"},{"location":"storylines/#storylines","text":"","title":"Storylines"},{"location":"storylines/#storyline-1-daimon","text":"Background The word \"Demon\" which we commonly know today, is derived from \"Daemon\". Daemon is the Latin word for the Ancient Greek of daimon (\u03b4\u03b1\u03af\u03bc\u03c9\u03bd: \"god\", \"godlike\", \"power\", \"fate\"), which originally referred to a lesser deity or guiding spirit such as the daemons of ancient Greek religion and mythology and of later Hellenistic religion and philosophy. The word is derived from Proto-Indo-European daimon \"provider, divider (of fortunes or destinies), \" from the root da- \"to divide\". Daimons were possibly seen as the souls of men of the golden age acting as tutelary deities, according to entry \u03b4\u03b1\u03af\u03bc\u03c9\u03bd at Liddell & Scott. Additionally, For reference, BCE is short for Before Common Era. The Common Era begins with year 1 in the Gregorian calendar and is also known as the Western or Christian calendar.","title":"StoryLine 1: \"Daimon\""},{"location":"storylines/#the-first-gods","text":"Generally the Oldest Deities are the Mesopotamian Gods. The seven sages in Sumerian mythology sent to the earth by Enki at the beginning of time to give human beings the sacred 'me' (laws) of civilization. They were also known, by the Akkadians and Babylonians, as The Apkallu or the Apkallu Fish and are depicted with the body of a fish and the head of a man or with the torso of a fish and human arms, legs and head, sometimes with and sometimes without wings. In the Babylonian tradition, the Apkallu also appear as Griffins or simply as humans with wings. There are shrines to Enki dating back to the founding of the city of Eridu, considered by the Mesopotamians the first city established at the beginning of the world c. 5400 BCE.","title":"The First Gods"},{"location":"storylines/#what-were-they-really","text":"Travelers from alternate dimensions and planes. More importantly, they were usually opportunists and unscrupulous businessmen and merchants. Just vasty overpowered compared to the native life here on Earth. And the wars and conflicts have never stopped.","title":"What were they really?"},{"location":"storylines/#footnotes","text":"https://en.wikipedia.org/wiki/Daemon_(classical_mythology ) \u21a9 https://www.ancient.eu/Enki/ \u21a9","title":"Footnotes"},{"location":"books/daimon/","text":"Daimon \u00b6","title":"Daimon"},{"location":"books/daimon/#daimon","text":"","title":"Daimon"}]}